<?xml version="1.0"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="My custom PMD ruleset" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description></description>

    <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
    <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
    <rule ref="category/java/bestpractices.xml/LooseCoupling" />
    <rule ref="category/java/bestpractices.xml/SystemPrintln" />
    <rule ref="category/java/bestpractices.xml/UnusedAssignment" />
    <rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
    <rule ref="category/java/bestpractices.xml/UnusedImports" />
    <rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
    <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
    <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" />
    <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
    <rule ref="category/java/bestpractices.xml/UseTryWithResources" />

<!--    <rule ref="category/java/codestyle.xml/AvoidUsingNativeCode" />-->
<!--    <rule ref="category/java/codestyle.xml/ConfusingTernary" />-->
    <rule ref="category/java/codestyle.xml/ControlStatementBraces" />
    <rule ref="category/java/codestyle.xml/DefaultPackage" />
    <rule ref="category/java/codestyle.xml/DontImportJavaLang" />
    <rule ref="category/java/codestyle.xml/DuplicateImports" />
    <rule ref="category/java/codestyle.xml/NoPackage" />
    <rule ref="category/java/codestyle.xml/PackageCase" />
<!--    <rule ref="category/java/codestyle.xml/PrematureDeclaration" />-->
<!--    <rule ref="category/java/codestyle.xml/ShortClassName" />-->
<!--    <rule ref="category/java/codestyle.xml/ShortMethodName" />-->
<!--    <rule ref="category/java/codestyle.xml/ShortVariable" />-->
<!--    <rule ref="category/java/codestyle.xml/TooManyStaticImports" />-->
<!--    <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement" />-->
<!--    <rule ref="category/java/codestyle.xml/UnnecessaryCast" />-->
<!--    <rule ref="category/java/codestyle.xml/UnnecessaryConstructor" />-->
<!--    <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />-->
<!--    <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />-->
<!--    <rule ref="category/java/codestyle.xml/UnnecessaryModifier" />-->
    <rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
<!--    <rule ref="category/java/codestyle.xml/UseDiamondOperator" />-->
<!--    <rule ref="category/java/codestyle.xml/UselessParentheses" />-->
<!--    <rule ref="category/java/codestyle.xml/UselessQualifiedThis" />-->
<!--    <rule ref="category/java/codestyle.xml/UseShortArrayInitializer" />-->

    <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts" />
    <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
<!--    <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />-->
    <rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures" />
    <rule ref="category/java/design.xml/CouplingBetweenObjects" />
    <rule ref="category/java/design.xml/CyclomaticComplexity" />
<!--    <rule ref="category/java/design.xml/DataClass" />-->
    <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
<!--    <rule ref="category/java/design.xml/ExceptionAsFlowControl" />-->
    <rule ref="category/java/design.xml/ExcessiveClassLength" />
    <rule ref="category/java/design.xml/ExcessiveImports" />
    <rule ref="category/java/design.xml/ExcessiveMethodLength" />
    <rule ref="category/java/design.xml/ExcessiveParameterList" />
    <rule ref="category/java/design.xml/ExcessivePublicCount" />
    <rule ref="category/java/design.xml/GodClass" />
<!--    <rule ref="category/java/design.xml/ImmutableField" />-->
    <rule ref="category/java/design.xml/LawOfDemeter" />
    <rule ref="category/java/design.xml/LogicInversion" />
<!--    <rule ref="category/java/design.xml/LoosePackageCoupling" />-->
    <rule ref="category/java/design.xml/NPathComplexity" />
    <rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
    <rule ref="category/java/design.xml/SimplifyBooleanReturns" />
    <rule ref="category/java/design.xml/SimplifyConditional" />
    <rule ref="category/java/design.xml/SingularField" />
    <rule ref="category/java/design.xml/TooManyFields" />
    <rule ref="category/java/design.xml/TooManyMethods" />
    <rule ref="category/java/design.xml/UselessOverridingMethod" />

<!--    <rule ref="category/java/documentation.xml" />-->
    <!--  leave this to google errorprone  -->
<!--    <rule ref="category/java/errorprone.xml" />-->
    <rule ref="category/java/multithreading.xml" />
    <rule ref="category/java/performance.xml" />
    <rule ref="category/java/security.xml" />
</ruleset>